/*
 * generated by Xtext 2.14.0.RC1
 */
package org.example.domainmodel.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.example.domainmodel.domainmodel.Domainmodel
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(DomainmodelInjectorProvider)
class DomainmodelParsingTest {
	@Inject
	ParseHelper<Domainmodel> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			DATABASE name varchar
			
			entity Blog {
			    title: VARCHAR(500)
			    many posts: INT
			}
			 
			entity HasAuthor {
			    author: VARCHAR(1000)
			}
			 
			entity Post extends HasAuthor {
			    title: VARCHAR(1000)
			    content: VARCHAR(1000)
			    many comments: INT
			}
			 
			entity Comment extends HasAuthor {
			    content: VARCHAR(1000)
			}
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
